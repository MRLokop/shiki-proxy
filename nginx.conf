# nginx configuration for mirroring shikimori

server {
    listen 80;
    listen [::]:80;
    server_name ~^(?<subdomain>moe|desu|camo-v3|nyaa|kawai|dere)\.content\.ru$;

    location / {
        proxy_pass https://135.181.210.175;

        # Set HTTP version to 1.1 to make proxy working faster (maybe)
        proxy_http_version 1.1;

        # Shikimori should know that we're proxy, also send user's ip address.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Addr $server_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Server $host;
        
        # Set host to make proxy working
        proxy_set_header Host $subdomain.shikimori.one;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name faye-v2.content.ru;

    location / {
        if ($http_origin = ''){
            set $http_origin "*";
        }

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Origin $http_origin;

        # Proxy everything to shikimori ip.
        proxy_pass https://135.181.210.175;

        # Shikimori should know that we're proxy, also send user's ip address.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Addr $server_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Server $host;
        
        # Set host to make proxy working
        proxy_set_header Host faye-v2.shikimori.one;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name shiki.example.ru;

    # Quick fix for rate-limit bypass
    set $token "";

    if ($is_args) {
        set $token "&";
    }

    location / {
        # Bypass rate-limit and fix InvalidAuthenticityToken
        set $originheader "";
        if ($request_method = GET) {
             set $args "${args}${token}/autocomplete";
        }
        if ($request_method = POST) {
             set $args "${args}${token}/screenshots";
             set $originheader "https://shikimori.one";
        }

        # Proxy everything to shikimori ip.
        proxy_pass https://135.181.210.175;

        # Set HTTP version to 1.1 to make proxy working faster (maybe)
        proxy_http_version 1.1;

        # Set encoding to blank to make sub_filter working
        proxy_set_header Accept-Encoding "";

        # Shikimori should know that we're proxy, also send user's ip address.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Addr $server_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Server $host;

        # Set "Origin" header to fix InvalidAuthenticityToken
        proxy_set_header Origin $originheader;

        # Set host to make proxy working
        proxy_set_header Host shikimori.one;

        # Redirect from shiki to our proxy, also fix cookies
        proxy_redirect https://shikimori.one "https://$host";
        proxy_cookie_domain shikimori.one $host;

        # Replace every shikimori link in JavaScript and JSON files to our proxy
        sub_filter_types application/javascript application/json;
        sub_filter "https://shikimori.one/" "https://$host/";
        sub_filter ".shikimori.one/" ".content.ru/";
        sub_filter_once off;
    }
}